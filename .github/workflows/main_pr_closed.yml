name: main_pr_closed

on:
  pull_request:
    types: [ closed ]
    branches: [ main ]
  

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install pip and twine
        run: |
          pip install --upgrade pip
          pip install twine

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1

      - name: Install dependencies and project
        run: |
          poetry install -v --without interactive,docs

      - name: Build package
        run: |
          poetry build -f wheel

      - name: Publish package to Azure Artifact
        run: |
          poetry run twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.MY_AZURE_ARTIFACTS_PAT }} 
          TWINE_REPOSITORY_URL: https://pkgs.dev.azure.com/nakesittipong/fordemoOnly/_packaging/test-feed/pypi/upload

      - name: Promote Feed View to @Prerelease
        env:
          ORGANIZATION: "nakesittipong"
          PROJECT: "fordemoOnly"
          FEED_NAME: "test-feed"
          PACKAGE_NAME: "test-package"
          PACKAGE_VERSION: $(awk -F ' = ' '$1 == "version" { gsub(/"/, "", $2); print $2 }' pyproject.toml)
          VIEW_NAME: "Prerelease"
          
        run: |
          
          echo "Promote Package Version ::::: $PACKAGE_VERSION"

          URL="https://pkgs.dev.azure.com/$ORGANIZATION/$PROJECT/_apis/packaging/feeds/$FEED_NAME/pypi/packages/$PACKAGE_NAME/versions/$PACKAGE_VERSION?api-version=7.1-preview.1"
  
          PATCH_DATA="{
            \"views\": {
                \"op\": \"add\",
                \"path\": \"/views/-\",
                \"value\": \"Prerelease\"
                }
          }"
          # Promote the package
          response=$(
              curl -vX PATCH -H "Content-Type: application/json" -u "__token__:${{ secrets.MY_AZURE_ARTIFACTS_PAT }}" -d "$PATCH_DATA" "$URL"
          )
          # Check the response
          if [ "$response" == "" ]; then
            echo "$ >>>> $PACKAGE_NAME [$PACKAGE_VERSION] has been promoted to '$VIEW_NAME' view!"
          else
            echo "Package promotion failed. Error: $response"
            exit 1
          fi
